[{"H:\\client_project\\project1\\project\\src\\index.js":"1","H:\\client_project\\project1\\project\\src\\components\\landing.js":"2","H:\\client_project\\project1\\project\\src\\components\\indexedDb.js":"3","H:\\client_project\\project1\\project\\src\\components\\productAdd.js":"4","H:\\client_project\\project1\\project\\src\\components\\storeInfo.js":"5","H:\\client_project\\project1\\project\\src\\components\\productListItem.js":"6","H:\\client_project\\project1\\project\\src\\components\\productListEdit.js":"7","H:\\client_project\\project1\\project\\src\\serviceWorker.js":"8","H:\\client_project\\project1\\project\\src\\components\\settings.js":"9","H:\\client_project\\project1\\project\\src\\components\\printCopy.js":"10","H:\\client_project\\project1\\project\\src\\components\\mainView.js":"11","H:\\client_project\\project1\\project\\src\\components\\productCartItem.js":"12","H:\\client_project\\project1\\project\\src\\components\\productListDelete.js":"13","H:\\client_project\\project1\\project\\src\\App.js":"14","H:\\client_project\\project1\\project\\src\\components\\productList.js":"15","H:\\client_project\\project1\\project\\src\\components\\password.js":"16"},{"size":508,"mtime":1606806719878,"results":"17","hashOfConfig":"18"},{"size":2669,"mtime":1608056278752,"results":"19","hashOfConfig":"18"},{"size":3489,"mtime":1608055790684,"results":"20","hashOfConfig":"18"},{"size":572,"mtime":1607163951696,"results":"21","hashOfConfig":"18"},{"size":415,"mtime":1607164492781,"results":"22","hashOfConfig":"18"},{"size":3612,"mtime":1606795235396,"results":"23","hashOfConfig":"18"},{"size":3294,"mtime":1608054332157,"results":"24","hashOfConfig":"18"},{"size":4964,"mtime":1595251402585,"results":"25","hashOfConfig":"18"},{"size":2500,"mtime":1607166114253,"results":"26","hashOfConfig":"18"},{"size":3546,"mtime":1608055819316,"results":"27","hashOfConfig":"18"},{"size":2713,"mtime":1608046524249,"results":"28","hashOfConfig":"18"},{"size":1121,"mtime":1606743922704,"results":"29","hashOfConfig":"18"},{"size":466,"mtime":1606712576790,"results":"30","hashOfConfig":"18"},{"size":216,"mtime":1606490297837,"results":"31","hashOfConfig":"18"},{"size":2203,"mtime":1608047725535,"results":"32","hashOfConfig":"18"},{"size":838,"mtime":1606483231955,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s1zfmw",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"H:\\client_project\\project1\\project\\src\\index.js",[],"H:\\client_project\\project1\\project\\src\\components\\landing.js",[],"H:\\client_project\\project1\\project\\src\\components\\indexedDb.js",["72","73"],"H:\\client_project\\project1\\project\\src\\components\\productAdd.js",["74"],"import React from 'react';\r\nimport '../css/productAdd.css';\r\nimport {data} from './storeInfo.js';\r\nimport logo from '../images/storelogo.png';\r\n\r\nfunction ProductAdd(props){\r\n\r\n\r\n\r\n  const addProduct = ()=>{\r\n    props.addProductView()\r\n  }\r\n\r\n  return(\r\n    <div className=\"product-add\">\r\n      <div className=\"product-add-wrapper\">\r\n        <img src={data.image} alt=\"logo\"></img>\r\n        <label>{data.name}</label>\r\n        <button onClick={addProduct} className=\"btn\">Add Product</button>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(ProductAdd)\r\n",["75","76"],"H:\\client_project\\project1\\project\\src\\components\\storeInfo.js",[],["77","78"],"H:\\client_project\\project1\\project\\src\\components\\productListItem.js",[],"H:\\client_project\\project1\\project\\src\\components\\productListEdit.js",[],"H:\\client_project\\project1\\project\\src\\serviceWorker.js",[],"H:\\client_project\\project1\\project\\src\\components\\settings.js",[],"H:\\client_project\\project1\\project\\src\\components\\printCopy.js",["79","80","81"],"import React from 'react';\r\nimport '../css/printCopy.css';\r\nimport {data} from './storeInfo.js';\r\nimport logo from '../images/storelogo.png';\r\nimport uniqueString from 'unique-string';\r\nimport ReactToPdf from 'react-to-pdf';\r\nimport IndexedDb from './indexedDb.js';\r\n\r\nfunction PrintCopy(props){\r\n\r\n  const divRef = React.useRef(null);\r\n\r\n  const billCancel = ()=>{\r\n    props.cancel()\r\n  }\r\n\r\n  const downloadPDF = ()=>{\r\n\r\n\r\n\r\n    props.cartList.map(async(val)=>{\r\n       // update the stock\r\n\r\n        let ind = new IndexedDb();\r\n        let data = await ind.getSpecificData(val.id);\r\n\r\n        let new_stock = (parseInt(data.stock) - parseInt(val.quantity));\r\n\r\n        let new_data = {id:data.id,title:data.title,description:data.description,mrp:data.mrp,buyingPrice:data.buyingPrice,sellingPrice:data.sellingPrice,gst:data.gst,stockLocation:data.stockLocation,rackNo:data.rackNo,stock:new_stock.toString()};\r\n\r\n        let ind2 = new IndexedDb();\r\n        let v = await ind2.addData(new_data);\r\n\r\n    })\r\n  }\r\n\r\n\r\n\r\n  return(\r\n    <div className=\"printCopy\">\r\n\r\n      <div className=\"dc-icons\">\r\n\r\n        <ReactToPdf targetRef={divRef} filename=\"invoice.pdf\" x={0.5} y={0.5} scale={0.8}>\r\n          {({toPdf}) => (\r\n              <div onClick={downloadPDF}>\r\n                  <label onClick={toPdf}><i className=\"material-icons\">download</i></label>\r\n              </div>\r\n\r\n          )}\r\n       </ReactToPdf>\r\n\r\n\r\n\r\n        <label onClick={billCancel}><i className=\"material-icons\">cancel</i></label>\r\n      </div>\r\n\r\n      <div ref={divRef} className=\"printCopy-wrapper\">\r\n        {/* ..... header ..... */}\r\n        <div className=\"row header-print\">\r\n          <div className=\"col s2\">\r\n            <img src={data.image}></img>\r\n          </div>\r\n\r\n          <div className=\"col s10\">\r\n            <span>Invoice</span>\r\n            <label style={{fontWeight:\"bold\",fontSize:\"18px\"}}>{data.name}</label>\r\n            <p>{data.address}</p>\r\n            <label>GSTIN: {data.gstin}</label>\r\n            <label>Ph: {data.phone}</label>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        {/* .... bill no .... */}\r\n        <div style={{display:\"inlineBlock\",width:\"50%\"}}>\r\n          <label style={{fontSize:\"16px\",color:\"black\"}}>Bill no: {uniqueString()}</label>\r\n        </div>\r\n        {/* ...... table ......... */}\r\n        <table>\r\n          <tr>\r\n             <th>Name</th>\r\n             <th>Quantity</th>\r\n             <th>MRP</th>\r\n             <th>RATE</th>\r\n             <th>GST</th>\r\n             <th>Total</th>\r\n         </tr>\r\n\r\n         {props.cartList.map(val=>{\r\n\r\n           return(\r\n\r\n             <tr key={uniqueString()}>\r\n               <td>{val.title}</td>\r\n               <td>{val.quantity}</td>\r\n               <td>Rs: {val.mrp}</td>\r\n               <td>Rs: {val.sellingPrice}</td>\r\n               <td>{val.gst}%</td>\r\n               <td>Rs: {val.total}</td>\r\n             </tr>\r\n\r\n\r\n           )\r\n\r\n         })}\r\n\r\n        </table>\r\n\r\n        {/* ..... total ....... */}\r\n        <div className=\"info-div total-cal\">\r\n          <label>Total Price Rs: {props.totalPrice}</label>\r\n          <label>Discount: {props.discountVal}%</label>\r\n          <label>Total Rs: <span>{props.discountTotalPrice}</span></label>\r\n        </div>\r\n\r\n        {/* ...... signature ...... */}\r\n        <div className=\"info-div signature\">\r\n          <label><span>Receiver's Signature:</span></label>\r\n          <label><span>Authorised Signatory:</span></label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PrintCopy\r\n","H:\\client_project\\project1\\project\\src\\components\\mainView.js",["82","83","84"],"H:\\client_project\\project1\\project\\src\\components\\productCartItem.js",["85"],"import React from 'react';\r\nimport '../css/productCart.css';\r\n\r\nfunction ProductCartItem(props){\r\n\r\n  const [price,editPrice] = React.useState(0)\r\n\r\n  React.useEffect(()=>{\r\n\r\n     \r\n      let price_ =  ( parseInt(props.data.sellingPrice) * ( (parseInt(props.data.gst) / 100) ) );\r\n      price_ = parseInt(props.data.sellingPrice) + price_;\r\n\r\n\r\n      price_ = price_ * props.data.quantity\r\n\r\n      editPrice(price_)\r\n\r\n  },[])\r\n\r\n  return(\r\n    <div className=\"productCart-list\">\r\n      <div>\r\n        {/* ... title... */}\r\n        <label>Product Name: <span>{props.data.title}</span></label>\r\n        {/* .... sellingPrice .... */}\r\n        <label>Product Selling Price Rs: <span>{props.data.sellingPrice}</span></label>\r\n        {/* ..... gst ..... */}\r\n        <label>Product GST <span>{props.data.gst}%</span></label>\r\n        {/* ..... total Price .... */}\r\n        <label>Total Price Rs: <span>{price}</span></label>\r\n        {/* .......... quantity ......... */}\r\n        <label>Product Quantity: <span>{props.data.quantity}</span></label>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductCartItem\r\n","H:\\client_project\\project1\\project\\src\\components\\productListDelete.js",[],"H:\\client_project\\project1\\project\\src\\App.js",[],"H:\\client_project\\project1\\project\\src\\components\\productList.js",["86","87"],"import React from 'react';\r\nimport '../css/productList.css';\r\nimport IndexedDb from './indexedDb.js';\r\nimport ProductListItem from './productListItem.js';\r\nimport uniqueString from 'unique-string';\r\n\r\n\r\nfunction ProductList(props){\r\n\r\n  const [productList,editProductList] = React.useState([]);\r\n\r\n  const [searchData,editSearchData] = React.useState('');\r\n\r\n\r\n\r\n  React.useEffect(()=>{\r\n\r\n\r\n     editProductList(props.addProductList)\r\n\r\n  },[])\r\n\r\n  const searchInput = (e)=>{\r\n\r\n     editSearchData(e.target.value);\r\n     findDataFromDB(e.target.value);\r\n\r\n\r\n  }\r\n\r\n  const findSearchData = async()=>{\r\n\r\n    findDataFromDB(searchData);\r\n\r\n  }\r\n\r\n  // find data from database\r\n  const findDataFromDB = async(sd)=>{\r\n\r\n    if(sd !== ''){\r\n\r\n     let indx = new IndexedDb();\r\n\r\n     // get all data from indexedDB\r\n    let alldata = await indx.getAllData();\r\n\r\n    // split the search data\r\n    let find_split_data = searchData.substring(0,3);\r\n\r\n     let result = [];\r\n    // loop through it\r\n    alldata.map(val=>{\r\n\r\n       // split the title\r\n       let split_title = val.title.substring(0,3);\r\n\r\n       if(split_title === find_split_data){\r\n\r\n         result.push(val)\r\n       }\r\n\r\n\r\n    })\r\n\r\n\r\n    editProductList(result)\r\n\r\n    }\r\n    // users want all data\r\n    else{\r\n      editProductList(props.addProductList)\r\n    }\r\n\r\n  }\r\n\r\n  const addCart = (item)=>{\r\n    \r\n    props.addCartList(item)\r\n  }\r\n\r\n\r\n  return(\r\n    <div className=\"product-list-div\">\r\n\r\n      <div className=\"product-list-div-wrapper\">\r\n\r\n      {/* ....... search ...... */}\r\n      <div className=\"product-list-search\">\r\n        <input onChange={searchInput} type=\"text\" placeholder=\"search by title\"></input>\r\n        <button onClick={findSearchData} className=\"btn-floating waves-effect waves-light\"><i className=\"material-icons\">search</i></button>\r\n      </div>\r\n\r\n      {/* ........ main body ........... */}\r\n      <div>\r\n        {productList.map(val=>{\r\n\r\n          return(\r\n            <div key={uniqueString()}>\r\n              <ProductListItem addCart={addCart} data={val}/>\r\n            </div>\r\n          )\r\n\r\n        })}\r\n      </div>\r\n\r\n    </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(ProductList)\r\n","H:\\client_project\\project1\\project\\src\\components\\password.js",["88"],{"ruleId":"89","severity":1,"message":"90","line":12,"column":6,"nodeType":"91","messageId":"92","endLine":12,"endColumn":11},{"ruleId":"89","severity":1,"message":"93","line":21,"column":13,"nodeType":"91","messageId":"92","endLine":21,"endColumn":18},{"ruleId":"89","severity":1,"message":"94","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":12},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"95","replacedBy":"99"},{"ruleId":"97","replacedBy":"100"},{"ruleId":"89","severity":1,"message":"94","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":12},{"ruleId":"89","severity":1,"message":"101","line":32,"column":13,"nodeType":"91","messageId":"92","endLine":32,"endColumn":14},{"ruleId":"102","severity":1,"message":"103","line":62,"column":13,"nodeType":"104","endLine":62,"endColumn":35},{"ruleId":"105","severity":1,"message":"106","line":22,"column":19,"nodeType":"107","endLine":32,"endColumn":4},{"ruleId":"105","severity":1,"message":"108","line":51,"column":5,"nodeType":"109","endLine":51,"endColumn":17,"suggestions":"110"},{"ruleId":"105","severity":1,"message":"111","line":90,"column":5,"nodeType":"109","endLine":90,"endColumn":21,"suggestions":"112"},{"ruleId":"105","severity":1,"message":"113","line":19,"column":5,"nodeType":"109","endLine":19,"endColumn":7,"suggestions":"114"},{"ruleId":"105","severity":1,"message":"115","line":21,"column":5,"nodeType":"109","endLine":21,"endColumn":7,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":52,"column":20,"nodeType":"107","messageId":"119","endLine":52,"endColumn":22},{"ruleId":"89","severity":1,"message":"120","line":1,"column":15,"nodeType":"91","messageId":"92","endLine":1,"endColumn":24},"no-unused-vars","'index' is defined but never used.","Identifier","unusedVar","'index' is assigned a value but never used.","'logo' is defined but never used.","no-native-reassign",["121"],"no-negated-in-lhs",["122"],["121"],["122"],"'v' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook React.useCallback has an unnecessary dependency: 'addProduct'. Either exclude it or remove the dependency array.","ArrayExpression",["123"],"React Hook React.useCallback has an unnecessary dependency: 'addProductList'. Either exclude it or remove the dependency array.",["124"],"React Hook React.useEffect has missing dependencies: 'props.data.gst', 'props.data.quantity', and 'props.data.sellingPrice'. Either include them or remove the dependency array.",["125"],"React Hook React.useEffect has a missing dependency: 'props.addProductList'. Either include it or remove the dependency array. If 'editProductList' needs the current value of 'props.addProductList', you can also switch to useReducer instead of useState and read 'props.addProductList' in the reducer.",["126"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"127","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: []",{"range":"134","text":"135"},{"range":"136","text":"135"},"Update the dependencies array to be: [props.data.gst, props.data.quantity, props.data.sellingPrice]",{"range":"137","text":"138"},"Update the dependencies array to be: [props.addProductList]",{"range":"139","text":"140"},[1092,1104],"[]",[1806,1822],[424,426],"[props.data.gst, props.data.quantity, props.data.sellingPrice]",[442,444],"[props.addProductList]"]