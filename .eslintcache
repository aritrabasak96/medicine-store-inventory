[{"H:\\client_project\\project1\\project\\src\\App.js":"1","H:\\client_project\\project1\\project\\src\\components\\landing.js":"2","H:\\client_project\\project1\\project\\src\\components\\password.js":"3","H:\\client_project\\project1\\project\\src\\components\\indexedDb.js":"4","H:\\client_project\\project1\\project\\src\\components\\storeInfo.js":"5","H:\\client_project\\project1\\project\\src\\components\\productCartItem.js":"6","H:\\client_project\\project1\\project\\src\\components\\productListDelete.js":"7","H:\\client_project\\project1\\project\\src\\components\\productListEdit.js":"8","H:\\client_project\\project1\\project\\src\\serviceWorker.js":"9","H:\\client_project\\project1\\project\\src\\components\\settings.js":"10","H:\\client_project\\project1\\project\\src\\components\\productAdd.js":"11","H:\\client_project\\project1\\project\\src\\components\\addProduct.js":"12","H:\\client_project\\project1\\project\\src\\components\\productListItem.js":"13","H:\\client_project\\project1\\project\\src\\index.js":"14","H:\\client_project\\project1\\project\\src\\components\\mainView.js":"15","H:\\client_project\\project1\\project\\src\\components\\productList.js":"16","H:\\client_project\\project1\\project\\src\\components\\productCart.js":"17","H:\\client_project\\project1\\project\\src\\components\\printCopy.js":"18"},{"size":216,"mtime":1606490297837,"results":"19","hashOfConfig":"20"},{"size":2669,"mtime":1608056278752,"results":"21","hashOfConfig":"20"},{"size":1201,"mtime":1608306923088,"results":"22","hashOfConfig":"20"},{"size":3489,"mtime":1608055790684,"results":"23","hashOfConfig":"20"},{"size":415,"mtime":1607164492781,"results":"24","hashOfConfig":"20"},{"size":1287,"mtime":1609043362697,"results":"25","hashOfConfig":"20"},{"size":466,"mtime":1606712576790,"results":"26","hashOfConfig":"20"},{"size":3294,"mtime":1608054332157,"results":"27","hashOfConfig":"20"},{"size":4964,"mtime":1595251402585,"results":"28","hashOfConfig":"20"},{"size":2500,"mtime":1607166114253,"results":"29","hashOfConfig":"20"},{"size":572,"mtime":1607163951696,"results":"30","hashOfConfig":"20"},{"size":3926,"mtime":1606733387772,"results":"31","hashOfConfig":"20"},{"size":4240,"mtime":1609042447937,"results":"32","hashOfConfig":"20"},{"size":508,"mtime":1606806719878,"results":"33","hashOfConfig":"20"},{"size":2706,"mtime":1609042507660,"results":"34","hashOfConfig":"20"},{"size":2469,"mtime":1609054884165,"results":"35","hashOfConfig":"20"},{"size":4148,"mtime":1609043650322,"results":"36","hashOfConfig":"20"},{"size":3546,"mtime":1608055819316,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1s1zfmw",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"H:\\client_project\\project1\\project\\src\\App.js",[],["82","83"],"H:\\client_project\\project1\\project\\src\\components\\landing.js",[],["84","85"],"H:\\client_project\\project1\\project\\src\\components\\password.js",["86"],"import React,{useEffect} from 'react'\r\nimport '../css/password.css';\r\nimport axios from 'axios';\r\n\r\nfunction Password(props){\r\n\r\n  const [password,editPassword] = React.useState('');\r\n  const [message,editMessage] = React.useState('Enter The Password');\r\n\r\n  //let gimicPass = '123789';\r\n\r\n  const changePassword = (e)=>{\r\n    editPassword(e.target.value)\r\n  }\r\n\r\n  const verifyPassword = ()=>{\r\n\r\n    editMessage('Please wait...');\r\n\r\n    let data = {\r\n\r\n      pwd:password\r\n    }\r\n\r\n    axios.post(\"https://florentine-mint-wedge.glitch.me/api/auth/\",data)\r\n    .then(response=>{\r\n          \r\n         if(response.data.msg === 'notused'){\r\n\r\n            props.verify(\"y\")\r\n         }\r\n         else{\r\n            editMessage('Wrong Password')\r\n         }   \r\n    })\r\n    .catch(err=>{\r\n       editMessage('check your internet connection')\r\n    })\r\n    \r\n  }\r\n\r\n  return(\r\n    <div className=\"password\">\r\n      <div className=\"password-wrapper\">\r\n        <h3>{message}</h3>\r\n        <input onChange={changePassword} type=\"text\" placeholder=\"Enter password\"></input>\r\n        <button className=\"btn\" onClick={verifyPassword}>Login</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Password\r\n",["87","88"],"H:\\client_project\\project1\\project\\src\\components\\indexedDb.js",["89","90"],"\r\nfunction IndexedDb(){\r\n\r\n  const databaseName = 'medicinestore';\r\n  const storeName = 'medicine';\r\n  const indexName = 'location';\r\n // create or open db\r\n  let request = window.indexedDB.open(databaseName,2),\r\n     db,\r\n     tx,\r\n     store,\r\n     index;\r\n\r\n // a callback will trigger when we open or create any database\r\n request.onupgradeneeded = (e)=>{\r\n\r\n   let db = request.result,\r\n             store = db.createObjectStore(storeName,{\r\n              keyPath:\"id\"\r\n            }),\r\n            index = store.createIndex(indexName,'storeLocation',{unique:false})\r\n  }\r\n\r\n  // data should be an object with an id\r\n  this.addData = async(data)=>{\r\n\r\n\r\n    return new Promise((resolve,reject)=>{\r\n\r\n       request.onerror = (e)=>{\r\n          reject('error');\r\n       }\r\n\r\n        request.onsuccess = (e)=>{\r\n\r\n          db =  request.result;\r\n\r\n          db.onerror = (e)=>{\r\n\r\n            db.close()\r\n            reject(\"error\")\r\n          }\r\n\r\n\r\n\r\n            tx = db.transaction(storeName,\"readwrite\");\r\n            store = tx.objectStore(storeName);\r\n\r\n\r\n\r\n\r\n            store.put(data);\r\n\r\n            resolve(\"success\")\r\n\r\n            tx.oncomplete = ()=>{\r\n              db.close()\r\n            }\r\n\r\n\r\n       }\r\n\r\n    })\r\n  }\r\n\r\n  this.getAllData = async()=>{\r\n\r\n\r\n    return new Promise((resolve,reject)=>{\r\n\r\n        request.onerror = (e)=>{\r\n\r\n          reject('error')\r\n        }\r\n\r\n        request.onsuccess = (e)=>{\r\n\r\n\r\n          db =  request.result;\r\n\r\n          db.onerror = (e)=>{\r\n\r\n            db.close()\r\n            reject(\"error\")\r\n          }\r\n\r\n            tx =  db.transaction(storeName,\"readwrite\");\r\n\r\n            store = tx.objectStore(storeName);\r\n\r\n            // get all data\r\n            let query = store.getAll()\r\n\r\n            query.onsuccess = (e)=>{\r\n              resolve(query.result)\r\n            }\r\n\r\n            query.onerror = ()=>{\r\n              reject('error')\r\n            }\r\n\r\n\r\n            tx.oncomplete = ()=>{\r\n              db.close()\r\n            }\r\n\r\n        }\r\n    })\r\n  }\r\n\r\n  this.getSpecificData = async(id)=>{\r\n\r\n    return new Promise((resolve,reject)=>{\r\n\r\n        request.onerror = (e)=>{\r\n\r\n          reject('error')\r\n        }\r\n\r\n        request.onsuccess = (e)=>{\r\n\r\n\r\n          db =  request.result;\r\n\r\n          db.onerror = (e)=>{\r\n\r\n            db.close()\r\n            reject(\"error\")\r\n          }\r\n\r\n            tx =  db.transaction(storeName,\"readwrite\");\r\n\r\n            store = tx.objectStore(storeName);\r\n\r\n            // get all data\r\n            let query = store.get(id)\r\n\r\n            query.onsuccess = (e)=>{\r\n              resolve(query.result)\r\n            }\r\n\r\n            query.onerror = ()=>{\r\n              reject('error')\r\n            }\r\n\r\n\r\n            tx.oncomplete = ()=>{\r\n              db.close()\r\n            }\r\n\r\n        }\r\n    })\r\n  }\r\n\r\n  this.deleteData = async(id)=>{\r\n\r\n    return new Promise((resolve,reject)=>{\r\n\r\n       request.onerror = (e)=>{\r\n          reject('error');\r\n       }\r\n\r\n        request.onsuccess = (e)=>{\r\n\r\n          db =  request.result;\r\n\r\n          db.onerror = (e)=>{\r\n\r\n            db.close()\r\n            reject(\"error\")\r\n          }\r\n\r\n\r\n\r\n            tx = db.transaction(storeName,\"readwrite\");\r\n            store = tx.objectStore(storeName);\r\n\r\n            store.delete(id);\r\n\r\n            resolve(\"success\")\r\n\r\n            tx.oncomplete = ()=>{\r\n              db.close()\r\n            }\r\n\r\n\r\n       }\r\n\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default IndexedDb\r\n","H:\\client_project\\project1\\project\\src\\components\\storeInfo.js",[],"H:\\client_project\\project1\\project\\src\\components\\productCartItem.js",["91"],"import React from 'react';\r\nimport '../css/productCart.css';\r\n\r\nfunction ProductCartItem(props){\r\n\r\n  const [price,editPrice] = React.useState(0)\r\n\r\n  React.useEffect(()=>{\r\n\r\n\r\n      let price_ =  ( parseInt(props.data.sellingPrice) * ( (parseInt(props.data.gst) / 100) ) );\r\n      price_ = parseInt(props.data.sellingPrice) + price_;\r\n\r\n\r\n      price_ = price_ * props.data.quantity\r\n\r\n      editPrice(price_)\r\n\r\n  },[])\r\n\r\n  const dltItem = ()=>{\r\n    \r\n    props.dltItem(props.data.id)\r\n  }\r\n\r\n  return(\r\n    <div className=\"productCart-list\">\r\n\r\n      <label onClick={dltItem} className=\"dlt\"><i className=\"material-icons\">delete</i></label>\r\n      <div>\r\n        {/* ... title... */}\r\n        <label>Product Name: <span>{props.data.title}</span></label>\r\n        {/* .... sellingPrice .... */}\r\n        <label>Product Selling Price Rs: <span>{props.data.sellingPrice}</span></label>\r\n        {/* ..... gst ..... */}\r\n        <label>Product GST <span>{props.data.gst}%</span></label>\r\n        {/* ..... total Price .... */}\r\n        <label>Total Price Rs: <span>{price}</span></label>\r\n        {/* .......... quantity ......... */}\r\n        <label>Product Quantity: <span>{props.data.quantity}</span></label>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductCartItem\r\n","H:\\client_project\\project1\\project\\src\\components\\productListDelete.js",[],"H:\\client_project\\project1\\project\\src\\components\\productListEdit.js",[],"H:\\client_project\\project1\\project\\src\\serviceWorker.js",[],["92","93"],"H:\\client_project\\project1\\project\\src\\components\\settings.js",[],"H:\\client_project\\project1\\project\\src\\components\\productAdd.js",["94"],"H:\\client_project\\project1\\project\\src\\components\\addProduct.js",[],"H:\\client_project\\project1\\project\\src\\components\\productListItem.js",[],"H:\\client_project\\project1\\project\\src\\index.js",[],"H:\\client_project\\project1\\project\\src\\components\\mainView.js",["95","96","97"],"H:\\client_project\\project1\\project\\src\\components\\productList.js",["98","99"],"import React from 'react';\r\nimport '../css/productList.css';\r\nimport IndexedDb from './indexedDb.js';\r\nimport ProductListItem from './productListItem.js';\r\nimport uniqueString from 'unique-string';\r\n\r\n\r\nfunction ProductList(props){\r\n\r\n  const [productList,editProductList] = React.useState([]);\r\n\r\n  const [searchData,editSearchData] = React.useState('');\r\n\r\n  const [cacheDb,editCacheDb] = React.useState([]);\r\n\r\n\r\n  React.useEffect(()=>{\r\n\r\n\r\n     editProductList(props.addProductList)\r\n\r\n  },[])\r\n\r\n  const searchInput = (e)=>{\r\n\r\n     editSearchData(e.target.value);\r\n     findDataFromDB(e.target.value);\r\n\r\n\r\n  }\r\n\r\n  const findSearchData = async()=>{\r\n\r\n    findDataFromDB(searchData);\r\n\r\n  }\r\n\r\n  // find data from database\r\n  const findDataFromDB = async(sd)=>{\r\n\r\n    if(sd !== ''){\r\n\r\n     let indx = new IndexedDb();\r\n\r\n     // cache the data\r\n\r\n     if(cacheDb.length === 0){\r\n       // data not present\r\n\r\n         let alldata = await indx.getAllData();\r\n         editCacheDb(alldata)\r\n     }\r\n     else{\r\n       console.log(\"from cache\");\r\n     }\r\n\r\n     // get all data from indexedDB\r\n\r\n\r\n    // split the search data\r\n\r\n    let find_split_data = sd.substring(0,sd.length + 1);\r\n\r\n\r\n     let result = [];\r\n    // loop through it\r\n    cacheDb.map(val=>{\r\n\r\n       // split the title\r\n       let split_title = val.title.substring(0,sd.length);\r\n\r\n      \r\n\r\n       if(split_title === find_split_data){\r\n\r\n         result.push(val)\r\n       }\r\n\r\n\r\n    })\r\n\r\n\r\n    editProductList(result)\r\n\r\n    }\r\n    // users want all data\r\n    else{\r\n      editProductList(props.addProductList)\r\n    }\r\n\r\n  }\r\n\r\n  const addCart = (item)=>{\r\n\r\n    props.addCartList(item)\r\n  }\r\n\r\n\r\n  return(\r\n    <div className=\"product-list-div\">\r\n\r\n      <div className=\"product-list-div-wrapper\">\r\n\r\n      {/* ....... search ...... */}\r\n      <div className=\"product-list-search\">\r\n        <input onChange={searchInput} type=\"text\" placeholder=\"search by title\"></input>\r\n        <button onClick={findSearchData} className=\"btn-floating waves-effect waves-light\"><i className=\"material-icons\">search</i></button>\r\n      </div>\r\n\r\n      {/* ........ main body ........... */}\r\n      <div>\r\n        {productList.map(val=>{\r\n\r\n          return(\r\n            <div key={uniqueString()}>\r\n              <ProductListItem addCart={addCart} data={val}/>\r\n            </div>\r\n          )\r\n\r\n        })}\r\n      </div>\r\n\r\n    </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(ProductList)\r\n","H:\\client_project\\project1\\project\\src\\components\\productCart.js",["100","101"],"H:\\client_project\\project1\\project\\src\\components\\printCopy.js",["102","103","104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"105","replacedBy":"109"},{"ruleId":"107","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":15,"nodeType":"113","messageId":"114","endLine":1,"endColumn":24},{"ruleId":"105","replacedBy":"115"},{"ruleId":"107","replacedBy":"116"},{"ruleId":"111","severity":1,"message":"117","line":12,"column":6,"nodeType":"113","messageId":"114","endLine":12,"endColumn":11},{"ruleId":"111","severity":1,"message":"118","line":21,"column":13,"nodeType":"113","messageId":"114","endLine":21,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":19,"column":5,"nodeType":"121","endLine":19,"endColumn":7,"suggestions":"122"},{"ruleId":"105","replacedBy":"123"},{"ruleId":"107","replacedBy":"124"},{"ruleId":"111","severity":1,"message":"125","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":12},{"ruleId":"119","severity":1,"message":"126","line":22,"column":19,"nodeType":"127","endLine":32,"endColumn":4},{"ruleId":"119","severity":1,"message":"128","line":51,"column":5,"nodeType":"121","endLine":51,"endColumn":17,"suggestions":"129"},{"ruleId":"119","severity":1,"message":"130","line":91,"column":5,"nodeType":"121","endLine":91,"endColumn":21,"suggestions":"131"},{"ruleId":"119","severity":1,"message":"132","line":22,"column":5,"nodeType":"121","endLine":22,"endColumn":7,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":67,"column":20,"nodeType":"127","messageId":"136","endLine":67,"endColumn":22},{"ruleId":"119","severity":1,"message":"126","line":116,"column":19,"nodeType":"127","endLine":123,"endColumn":4},{"ruleId":"119","severity":1,"message":"137","line":123,"column":5,"nodeType":"121","endLine":123,"endColumn":12,"suggestions":"138"},{"ruleId":"111","severity":1,"message":"125","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":12},{"ruleId":"111","severity":1,"message":"139","line":32,"column":13,"nodeType":"113","messageId":"114","endLine":32,"endColumn":14},{"ruleId":"140","severity":1,"message":"141","line":62,"column":13,"nodeType":"142","endLine":62,"endColumn":35},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],["143"],["144"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["143"],["144"],"'index' is defined but never used.","'index' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'props.data.gst', 'props.data.quantity', and 'props.data.sellingPrice'. Either include them or remove the dependency array.","ArrayExpression",["145"],["143"],["144"],"'logo' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook React.useCallback has an unnecessary dependency: 'addProduct'. Either exclude it or remove the dependency array.",["146"],"React Hook React.useCallback has an unnecessary dependency: 'addProductList'. Either exclude it or remove the dependency array.",["147"],"React Hook React.useEffect has a missing dependency: 'props.addProductList'. Either include it or remove the dependency array. If 'editProductList' needs the current value of 'props.addProductList', you can also switch to useReducer instead of useState and read 'props.addProductList' in the reducer.",["148"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook React.useEffect has a missing dependency: 'addToCart'. Either include it or remove the dependency array.",["149"],"'v' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"152","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [props.data.gst, props.data.quantity, props.data.sellingPrice]",{"range":"159","text":"160"},"Update the dependencies array to be: []",{"range":"161","text":"162"},{"range":"163","text":"162"},"Update the dependencies array to be: [props.addProductList]",{"range":"164","text":"165"},"Update the dependencies array to be: [addToCart, props]",{"range":"166","text":"167"},[419,421],"[props.data.gst, props.data.quantity, props.data.sellingPrice]",[1092,1104],"[]",[1799,1815],[495,497],"[props.addProductList]",[2795,2802],"[addToCart, props]"]